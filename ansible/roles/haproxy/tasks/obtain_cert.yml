---
- name: add certbot ppa
  apt_repository: { repo: 'ppa:certbot/certbot', update_cache: yes }
- name: install certbot
  apt: { name: certbot }
- name: remove ubuntu letsencrypt package
  apt: { name: letsencrypt, state: absent }
- name: deploy script
  copy:
    dest: /root/letsencrypt_deploy.sh
    mode: 0700
    content: |
      #!/usr/bin/env bash
      set -ueo pipefail

      cat "$RENEWED_LINEAGE/fullchain.pem" "$RENEWED_LINEAGE/privkey.pem" > "/etc/ssl/private/$(basename "$RENEWED_LINEAGE").pem"
      {{ reload_cmd }}
- name: configure letsencrypt cli
  lineinfile: { dest: /etc/letsencrypt/cli.ini, regexp: "{{ item.key }}", line: '{{ item.key }} = {{ item.value }}', create: yes }
  with_dict:
    rsa-key-size: 4096
    email: "{{ email }}"
    authenticator: standalone
    preferred-challenges: http
    http-01-port: "{{ http_challenge_port }}"
    deploy-hook: /root/letsencrypt_deploy.sh
- name: configure letsencrypt cli
  lineinfile: { dest: /etc/letsencrypt/cli.ini, regexp: "{{ item }}", state: absent }
  with_items:
    - standalone-supported-challenges
- name: ensure certbot.timer is enabled
  systemd: { name: certbot.timer, state: started, enabled: yes }
- name: stat certificates
  stat: { path: "/etc/letsencrypt/live/{{item}}" }
  register: cert_stats
  with_items: "{{ domains }}"
- name: get initial certificate
  command: certbot certonly --standalone -d {{item.item}} --email {{email}} --non-interactive --agree-tos
  with_items: "{{ cert_stats.results }}"
  serial: 1 # TODO: serial not available for roles
  when: not item.stat.exists

- name: remove renewal script
  file: { dest: /root/letsencrypt_renew.sh, state: absent }
- name: remove cron for renewal
  cron:
    name: letsencrypt
    cron_file: letsencrypt_renew
    state: absent
